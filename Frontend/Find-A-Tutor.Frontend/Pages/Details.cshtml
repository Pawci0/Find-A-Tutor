@page
@model Find_A_Tutor.Frontend.Pages.DetailsModel
@{
    ViewData["Title"] = "Details of announcement 📖";
}

<link rel="stylesheet" type="text/css" href="~/css/main.css">
<link rel="stylesheet" type="text/css" href="~/css/details.css">

<script src="https://www.paypal.com/sdk/js?client-id=AX78qlQWBMJU0PIM9IEsKc0fbGRb6DNE6yJWTACOy-ww52uqn9gF0a3bAJiiHGzF4dYgT3l1JAQ2nhaf&currency=PLN">
</script>

<div class="container">
    <div class="row">
        <div class="col-6">
            <h2>Details of announcement 📖</h2>
        </div>
        <div class="col-6">
            <a href="/Student">
                <p class="text-right">Go back to panel</p>
            </a>
        </div>
    </div>
</div>
<div class="container">
    <div class="row">
        <div class="col-12" style="overflow-x:auto;">
            @{
                if (Model.privateLesson.IsSuccess)
                {
                    var privateLesson = Model.privateLesson.Value;
                    <h5>Created At:</h5>
                    <p>@privateLesson.CreatedAt</p>
                    <h5>Taken At:</h5>
                    <p>@(privateLesson.TakenAt.HasValue ? privateLesson.TakenAt.ToString() : "-")</p>
                    <h5>Relevant To:</h5>
                    <p>@privateLesson.RelevantTo.Value.ToString("dd.MM.yyyy")</p>
                    <h5>Description:</h5>
                    @*<textarea name="comment" rows="3" required="">@privateLesson.Description</textarea>*@
                    <p>@privateLesson.Description</p>
                    <h5>Subject:</h5>
                    <p>@privateLesson.Subject</p>
                    <h5>Assigned?</h5>
                    <p>@(privateLesson.IsAssigned.Value ? "✔️" : "❌")</p>
                    <h5>Paid?</h5>
                    <p>@(privateLesson.IsPaid.Value ? "✔️" : "❌")</p>
                    <h5>Completed?</h5>
                    <p>@(privateLesson.IsDone.Value ? "✔️" : "❌")</p>
                    <h5>Time</h5>
                    <p>@privateLesson.Time</p>
                    if (privateLesson.IsAssigned.Value)
                    {
                        <h5>Price per hour</h5>
                        <p>@privateLesson.PricePerHour</p>
                        <h5>Total price</h5>
                        <p>@privateLesson.TotalPrice</p>
                        if (!privateLesson.IsPaid.Value)
                        {
                            <div id="paypal-button-container"></div>
                        }
                    }
                }
                else
                {
                    @foreach (var err in Model.privateLesson.Errors)
                    {
                        <p class="msg">@err</p>
                    }
                }
            }
        </div>
    </div>
</div>

@if (!Model.privateLesson.Value.IsPaid.Value)
{
    <script>
        paypal.Buttons({
            createOrder: function (data, actions) {
                return actions.order.create({
                    purchase_units: [{
                        amount: {
                            value: @Model.privateLesson.Value.TotalPrice
                        },
                        description: 'Private lesson',
                        currency: 'PLN'
                    }]
                });
            },
            onApprove: async function (data, actions) {
                return await actions.order.capture().then(function (details) {
                    return fetch('/pay', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Access-Control-Allow-Origin': '*'
                        },
                        body: JSON.stringify({
                            orderID: data.orderID,
                            privateLessonId: '@Model.privateLesson.Value.Id'
                        })
                    });
                });
            }
        }).render('#paypal-button-container');
    </script>
}